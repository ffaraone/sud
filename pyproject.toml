[tool.poetry]
name = "sud"
version = "0.1.0"
description = "Scaleway Update DNS"
authors = ["Francesco Faraone"]
license = "Apache-2.0"
readme = "README.md"
packages = [
    { include = "sud" },
]

documentation = "https://github.com/ffaraone/sud"
homepage = "https://github.com/ffaraone/sud"
repository = "https://github.com/ffaraone/sud"

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: System :: Networking",
    "Topic :: Utilities",
    "License :: OSI Approved :: Apache Software License"
]

keywords = ["sud", "scaleway", "dns", "dynamic", "dynamicdns"]

[tool.poetry.scripts]
sud = "sud.cli:app"

[tool.poetry.dependencies]
python = ">=3.10,<4"
humanize = "^4.9.0"
python-telegram-bot = "^20.8"
pyyaml = "^6.0.1"
requests = "^2.31.0"
rich = "^13.7.0"
typer = {extras = ["all"], version = "^0.9.0"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
ipython = "^8.21.0"
mypy = "^1.8.0"
poetry-plugin-sort = "^0.2.1"
pytest = "^8.0.1"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-deadfixtures = "^2.2.1"
pytest-mock = "^3.12.0"
pytest-randomly = "^3.15.0"
responses = "^0.25.0"
types-pyyaml = "^6.0.12.12"
types-requests = "^2.31.0.20240218"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "."
addopts = "--cov=sud --cov-report=term-missing --cov-report=html --cov-report=xml"
log_cli = false

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
    "*/__init__.py",
    "__main__.py",
]

exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
extend-exclude = [".vscode", ".devcontainer"]
output-format = "full"

[tool.ruff.lint]

select = [
    "E",  # w errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10",  # flake8-pytest-style
]
ignore = [
    "PT004", # fixture '{name}' does not return anything, add leading underscore
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "B008",  # do not perform function calls in argument defaults
]


[tool.mypy]
warn_no_return = false
